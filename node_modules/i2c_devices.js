module.exports = [{
    name: "DC Motor Expansion Controller",
    aliases: ["motor", "dcmotor"],
    address: 0x01,
    registers: [{
            name: "DC_Firmware",
            command: 0x26,
            write: 0,
            read: 1,
            signed: false,
            description: "Returns the firmware version."
        },
        {
            name: "Set_EXP_ID",
            command: 0x24,
            write: 1,
            read: 0,
            signed: false,
            description: "Sets/changes the i2C address/ID of the motor controller."
        },
        {
            name: "Battery_Voltage",
            command: 0x53,
            write: 0,
            read: 2,
            signed: false,
            description: "Returns the battery voltage."
        },
        {
            name: "WDT_STOP",
            command: 0x23,
            write: 0,
            read: 0,
            description: "Forces a watchdog timer reset/restart of the motor controller processor."
        },
        {
            name: "Controller_Enable",
            command: 0x25,
            write: 0,
            read: 0,
            description: "Enables the motor controller."
        },
        {
            name: "Controller_Reset",
            command: 0x27,
            write: 0,
            read: 0,
            description: "Signals an internal firmware reset."
        },
        {
            name: "Motor1_Power",
            command: 0x40,
            write: 1,
            read: 0,
            signed: true,
            description: "Sets the power level for Motor 1."
        },
        {
            name: "Motor2_Power",
            command: 0x41,
            write: 1,
            read: 0,
            signed: true,
            description: "Sets the power level for Motor 2."
        },
        {
            name: "Motor_Powers",
            command: 0x42,
            write: 2,
            read: 0,
            signed: true,
            description: "Sets the power levels for Motor 1 and Motor 2."
        },
        {
            name: "Motor1_Speed",
            command: 0x43,
            write: 2,
            read: 0,
            signed: true,
            description: "Sets the speed parameter for Motor 1 in degrees per second."
        },
        {
            name: "Motor2_Speed",
            command: 0x44,
            write: 2,
            read: 0,
            signed: true,
            description: "Sets the speed parameter for Motor 2 in degrees per second."
        },
        {
            name: "Motor_Speeds",
            command: 0x45,
            write: 4,
            read: 0,
            signed: true,
            description: "Sets the speed parameters for Motor 1 and Motor 2 in degrees per second."
        },
        {
            name: "Motor1_Target",
            command: 0x46,
            write: 6,
            read: 0,
            signed: true,
            description: "Sets the encoder count target parameter for Motor 1."
        },
        {
            name: "Motor2_Target",
            command: 0x47,
            write: 6,
            read: 0,
            signed: true,
            description: "Sets the encoder count target parameter for Motor 2."
        },
        {
            name: "Motor_Targets",
            command: 0x48,
            write: 12,
            read: 0,
            signed: true,
            description: "Sets the encoder count target parameters for Motor 1 and Motor 2."
        },
        {
            name: "Motor1_Degree",
            command: 0x58,
            write: 6,
            read: 0,
            signed: true,
            description: "Sets the encoder degree target parameter for Motor 1."
        },
        {
            name: "Motor2_Degree",
            command: 0x59,
            write: 6,
            read: 0,
            signed: true,
            description: "Sets the encoder degree target parameter for Motor 2."
        },
        {
            name: "Motor_Degrees",
            command: 0x5A,
            write: 12,
            read: 0,
            signed: true,
            description: "Sets the encoder degree target parameters for Motor 1 and Motor 2."
        },
        {
            name: "Motor1_Invert",
            command: 0x51,
            write: 1,
            read: 0,
            signed: false,
            description: "Sets the invert direction condition for Motor 1."
        },
        {
            name: "Motor2_Invert",
            command: 0x52,
            write: 1,
            read: 0,
            signed: false,
            description: "Sets the invert direction condition for Motor 2."
        },
        {
            name: "Motor1_Busy",
            command: 0x4F,
            write: 0,
            read: 1,
            signed: false,
            description: "Returns the busy status of Motor 1."
        },
        {
            name: "Motor2_Busy",
            command: 0x50,
            write: 0,
            read: 1,
            signed: false,
            description: "Returns the busy status of Motor 2."
        },
        {
            name: "Motor1_Current",
            command: 0x54,
            write: 0,
            read: 2,
            signed: false,
            description: "Returns the Motor 1 load current in milliamps."
        },
        {
            name: "Motor2_Current",
            command: 0x55,
            write: 0,
            read: 2,
            signed: false,
            description: "Returns the Motor 2 load current in milliamps."
        },
        {
            name: "Encoder1_Count",
            command: 0x49,
            write: 0,
            read: 4,
            signed: true,
            description: "Returns the Motor 1 encoder count."
        },
        {
            name: "Encoder2_Count",
            command: 0x4A,
            write: 0,
            read: 4,
            signed: true,
            description: "Returns the Motor 2 encoder count."
        },
        {
            name: "Encoder1_Degrees",
            command: 0x5B,
            write: 0,
            read: 4,
            signed: true,
            description: "Returns the Motor 1 encoder position in degrees."
        },
        {
            name: "Encoder2_Degrees",
            command: 0x5C,
            write: 0,
            read: 4,
            signed: true,
            description: "Returns the Motor 2 encoder position in degrees."
        },
        {
            name: "Reset_Encoder1",
            command: 0x4C,
            write: 0,
            read: 0,
            description: "Resets encoder 1 count to 0."
        },
        {
            name: "Reset_Encoder2",
            command: 0x4D,
            write: 0,
            read: 0,
            description: "Resets encoder 2 count to 0."
        },
        {
            name: "Reset_Encoders",
            command: 0x4E,
            write: 0,
            read: 0,
            description: "Resets encoder 1 and encoder 2 to 0."
        },
        {
            name: "Speed_PID",
            command: 0x56,
            write: 6,
            read: 0,
            signed: false,
            description: "Sets the P, I, and D coefficients of the constant speed algorithm."
        },
        {
            name: "Target_PID",
            command: 0x57,
            write: 6,
            read: 0,
            signed: false,
            description: "Sets the P, I, and D coefficients of the target hold position algorithm"
        },
    ],
}, ];
